test[2] <- genome[3]
test
test[1] <- genome[5000]
test[1] <- genome[200]
test
min(length(genome[1:length(genome)]))
length(genome(2))
length(genome[[2]]
)
length(genome[[200]]
q
min(length(genome[[1:length(genome)]]))
length(genome[[1]])
length(genome[[2]])
length(genome[[1:2]])
length(genome[[1:3]])
length(genome[1:2])
length(genome[1])
length(genome[1:2])
genome[1:2]
genome[1000:1001]
genome[1000][1]
genome[1000][[1]]
length(genome[1000][[1]])
length(genome[1000][[2]])
length(genome[1000][[1]])
length(genome[1000:1002][[1]])
genome[1000:1002][[1]]
genome[1000:1002][1]
genome[1000:1002][1][1]
genome[1000]
class(genome[1000])
genome[1000]$YDR184C	phi=	0.151036
names(genome[1000])
strsplit(x = names(genome[1000]),split = '\')
)
)
''
'
strsplit(x = names(genome[1000]),split = '\\')
strsplit(x = names(genome[1000]),split = '\t')
strsplit(x = names(genome[1000]),split = '\t')[1]
strsplit(x = names(genome[1000]),split = '\t')[1]
strsplit(x = names(genome[1000]),split = '\t')[[1]]
strsplit(x = names(genome[1000]),split = '\t')[1][1]
?strsplit\
?strsplit
unlist(strsplit(x = names(genome[1000]),split = '\t'))
unlist(strsplit(x = names(genome[1000]),split = '\t'))[1]
names(genome <- unlist(strsplit(x = names(genome),split = '\t'))[1]
s
names(genome) <- unlist(strsplit(x = names(genome),split = '\t'))[1]
names(genome[1])
names(genome[1:3])
names(genome[2])
genome[2]
genome <- read.seq(filename);
for(j in 1:length(genome))
{}
for(j in 1:length(genome)){
names(genome[j]) <- unlist(strsplit(x = names(genome[j]),split = '\t'))[1]
}
names(genome[1])
names(genome[2])
j <- 1
names(genome[j]) <- unlist(strsplit(x = names(genome[j]),split = '\t'))[1]
unlist(strsplit(x = names(genome[j]),split = '\t'))[1]
names(genome[j])
names(genome[j]) <- asdf
names(genome[j]) <- "asdf"
names(genome[j])
names(genome)[j]
names(genome)[j] <- "asdF"
names(genome[j])
names(genome)[j]
names(genome)[j] <- "YAL001C\tphi=\t0.036653"
for(j in 1:length(genome)){
names(genome)[j] <- unlist(strsplit(x = names(genome[j]),split = '\t'))[1]
}
genome[1]
names(genome[1:5])
genome <- read.seq(filename)
names(genome) <- unlist(strsplit(x = names(genome),split = '\t'))[1]
names(genome[1])
names(genome)[1]
names(genome)[2]
genome <- read.seq(filename)
##### Script to divide the genome into (ratio) distinct and equal parts ######
source("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 5;
genome <- read.seq(filename);
for(i in 1:length(genome))
{
names(genome)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1]
}
names(genome[1])
ls(genome[1])
ls(genome[1000])
genome[1000]
source("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 5;
genome <- read.seq(filename);
for(i in 1:length(genome))
{
names(genome)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1]
}
genome[1000]
length(genome[1000])
length(genome[1000][1]
)
length(genome[[1000]]
)
length(genome[[1000]])
length(genome[[1000:1001]])
length(genome[1000])
length(genome[1000][1])
length(genome[1000][[1]])
length(genome[1000:1001][[1]])
length(genome[1000:1002][[1]])
length(genome[1000:1003][[1]])
length(genome[1000:1003])
for(i in 1:length(genome)){
}
min <- length(genome[[1]])
min
min <- c(1, length(genome[[1]]))
min
min <- matrix()
min[1,] <- c(1, length(genome[[1]]))
min
min[1,1] <- 1
min[1,2] <- length(genome[[1]])
min <- matrix(ncol=2)
min[1,] <- c(1, length(genome[[1]]))
min
min[2,] <- c(2, length(genome[[2]]))
min <- matrix(ncol=2, nrow=3)
min[1,] <- c(1, length(genome[[1]]))
min
min[2,] <- c(2, length(genome[[2]]))
min3
min
min[1,] <- c(2, length(genome[[2]]))
min[2,] <- c(1, length(genome[[1]]))
for(i in 1:length(genome)){
if (length(genome[[i]]) < min[1,2]){
min[3,] <- min[2,]
min[2,] <- min[1,]
min[1,] <- c(i, length(genome[[i]]))
}
print(min)
}
test <- min
test[-(1:2)]
test[-(1:2),]
test[-2,]
test <- min[2,]
min <- min[-2,]
test
min
section <- matrix(nrow = floor(length(genome)/ratio))
ratio <- 1000
section <- matrix(nrow = floor(length(genome)/ratio))
section <- matrix(nrow = floor(length(genome)/ratio))
section <- list()
section[1] <- genome[774]
section[2] <- genome[76]
section
section[-2]
section[-1]
rand
sort(section)
sectionphi <- table()
sectionphi <- data.frame()
sectionphi <- matrix(0)
sectionphi <- matrix()
sectionphi <- matrix(0)
sectionphi <- matrix(ncol=2, nrow=5)
sectionphi[1,1] <- YAR020C
sectionphi[1,1] <-
"YAR020C"
secionphi[1,2] <- 4.102230
sectionphi[1,2] <- 4.102230
sectionphi
##### Script to divide the genome into (ratio) distinct and equal parts ######
source("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 5;
genome <- read.seq(filename);
for(i in 1:length(genome))
{
names(genome)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1]
}
section <- list();
sectionphi <- table();
for(i in 1:(length(genome)/ratio) ) #genome loop
{
rand <- round(runif(1:length(genome)));
section[i] <- genome[rand];
names(section[i]) <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1];
sectionphi[i,1] <- names(section[i]);
sectionphi[i,2] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[3];
genome <- genome[-rand];
}
##### Script to divide the genome into (ratio) distinct and equal parts ######
source("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 5;
genome <- read.seq(filename);
for(i in 1:length(genome))
{
names(genome)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1]
}
section <- list();
sectionphi <- matrix();
for(i in 1:(length(genome)/ratio) ) #genome loop
{
rand <- round(runif(1:length(genome)));
section[i] <- genome[rand];
names(section[i]) <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1];
sectionphi[i,1] <- names(section[i]);
sectionphi[i,2] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[3];
genome <- genome[-rand];
}
i
source("random5ths.r")
##### Script to divide the genome into (ratio) distinct and equal parts ######
source("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 5;
genome <- read.seq(filename);
for(i in 1:length(genome))
{
names(genome)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1]
}
section <- list();
sectionphi <- matrix();
for(i in 1:(length(genome)/ratio) ) #genome loop
{
rand <- round(runif(1,1,length(genome)));
section[i] <- genome[rand];
names(section[i]) <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1];
sectionphi[i,1] <- names(section[i]);
sectionphi[i,2] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[3];
genome <- genome[-rand];
}
section
names(section[i])
##### Script to divide the genome into (ratio) distinct and equal parts ######
source("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 5;
genome <- read.seq(filename);
#for(i in 1:length(genome))
# {
#   names(genome)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1]
# }
section <- list();
sectionphi <- matrix();
for(i in 1:(length(genome)/ratio) ) #genome loop
{
rand <- round(runif(1,1,length(genome)));
section[i] <- genome[rand];
names(section[i]) <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1];
sectionphi[i,1] <- names(section[i]);
sectionphi[i,2] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[3];
genome <- genome[-rand];
}
names(section[i])
unlist(strsplit(x = names(genome[i]),split = '\t'))[1]
names(section)[1] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1]
##### Script to divide the genome into (ratio) distinct and equal parts ######
source("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 5;
genome <- read.seq(filename);
#for(i in 1:length(genome))
# {
#   names(genome)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1]
# }
section <- list();
sectionphi <- matrix();
for(i in 1:(length(genome)/ratio) ) #genome loop
{
rand <- round(runif(1,1,length(genome)));
section[i] <- genome[rand];
names(section)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1];
sectionphi[i,1] <- names(section)[i];
sectionphi[i,2] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[3];
genome <- genome[-rand];
}
##### Script to divide the genome into (ratio) distinct and equal parts ######
source("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 1000;
genome <- read.seq(filename);
#for(i in 1:length(genome))
# {
#   names(genome)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1]
# }
section <- list();
sectionphi <- matrix();
browser()
for(i in 1:(length(genome)/ratio) ) #genome loop
{
rand <- round(runif(1,1,length(genome)));
section[i] <- genome[rand];
names(section)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1];
sectionphi[i,1] <- names(section)[i];
sectionphi[i,2] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[3];
genome <- genome[-rand];
}
##### Script to divide the genome into (ratio) distinct and equal parts ######
source("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 1000;
genome <- read.seq(filename);
#for(i in 1:length(genome))
# {
#   names(genome)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1]
# }
section <- list();
sectionphi <- matrix();
browser()
for(i in 1:(length(genome)/ratio) ) #genome loop
{
rand <- round(runif(1,1,length(genome)));
section[i] <- genome[rand];
names(section)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1];
sectionphi[i,1] <- names(section)[i];
sectionphi[i,2] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[3];
genome <- genome[-rand];
}
##### Script to divide the genome into (ratio) distinct and equal parts ######
source("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 1000;
genome <- read.seq(filename);
#for(i in 1:length(genome))
# {
#   names(genome)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1]
# }
section <- list();
sectionphi <- matrix();
i <- 1
rand <- round(runif(1,1,length(genome)));
section[i] <- genome[rand];
sectionphi[i,1] <- names(section)[i];
names(section)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1];
section
names(section)[1]
sectionphi[i,1] <- names(section)[i];
sectionphi[i,2] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[3];
unlist(strsplit(x = names(genome[i]),split = '\t')
)
unlist(strsplit(x = names(genome[i]),split = '\t'))
unlist(strsplit(x = names(genome[i]),split = '\t'))[2]
unlist(strsplit(x = names(genome[i]),split = '\t'))[3]
sectionphi <- matrix(ncol = 2, nrow = length(genome)/ratio);
<- round(runif(1,1,length(genome)));
section[i] <- genome[rand];
names(section)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1];
sectionphi[i,1] <- names(section)[i];
sectionphi[i,2] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[3];
rand <- round(runif(1,1,length(genome)));
section[i] <- genome[rand];
names(section)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1];
sectionphi[i,1] <- names(section)[i];
sectionphi[i,2] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[3];
##### Script to divide the genome into (ratio) distinct and equal parts ######
source("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 1000;
genome <- read.seq(filename);
#for(i in 1:length(genome))
# {
#   names(genome)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1]
# }
section <- list();
sectionphi <- matrix(ncol = 2, nrow = length(genome)/ratio);
for(i in 1:(length(genome)/ratio) ) #genome loop
{
rand <- round(runif(1,1,length(genome)));
section[i] <- genome[rand];
names(section)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1];
sectionphi[i,1] <- names(section)[i];
sectionphi[i,2] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[3];
genome <- genome[-rand];
}
section
names(section)
names(sectionphi)
sectionphi[1,]
sectionphi[,1]
sectionphi
source("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 1000;
genome <- read.seq(filename);
#for(i in 1:length(genome))
# {
#   names(genome)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1]
# }
section <- list();
sectionphi <- matrix(ncol = 2, nrow = length(genome)/ratio);
rand <- round(runif(1,1,length(genome)));
section[i] <- genome[rand];
names(section)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1];
sectionphi[i,1] <- names(section)[i];
sectionphi[i,2] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[3];
i <- 1
rand <- round(runif(1,1,length(genome)));
section[i] <- genome[rand];
names(section)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1];
sectionphi[i,1] <- names(section)[i];
sectionphi[i,2] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[3];
sectionphi
genome[rand]
ource("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 1000;
genome <- read.seq(filename);
#for(i in 1:length(genome))
# {
#   names(genome)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1]
# }
section <- list();
sectionphi <- matrix(ncol = 2, nrow = length(genome)/ratio);
rand <- 774
section[i] <- genome[rand];
i <- 1
section[i] <- genome[rand];
names(section)[i] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[1];
sectionphi[i,1] <- names(section)[i];
sectionphi[i,2] <- unlist(strsplit(x = names(genome[i]),split = '\t'))[3];
section
sectionphi
##### Script to divide the genome into (ratio) distinct and equal parts ######
source("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 1000;
genome <- read.seq(filename);
section <- list();
sectionphi <- matrix(ncol = 2, nrow = length(genome)/ratio);
i <- 1
rand <- 774
section[i] <- genome[rand];
names(section)[i] <- unlist(strsplit(x = names(genome[rand]),split = '\t'))[1];
sectionphi[i,1] <- names(section)[i];
sectionphi[i,2] <- unlist(strsplit(x = names(genome[rand]),split = '\t'))[3];
section
sectionphi
gene[rand]
genome[rand]
genome[rand]
genome <- genome[-rand];
genome[rand]
genome <- genome[-rand];
?write.csv
##### Script to divide the genome into (ratio) distinct and equal parts ######
source("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 1000;
genome <- read.seq(filename);
section <- list();
sectionphi <- matrix(ncol = 2, nrow = length(genome)/ratio);
for(i in 1:(length(genome)/ratio) ) #genome loop
{
rand <- round(runif(1,1,length(genome)));
section[i] <- genome[rand];
names(section)[i] <- unlist(strsplit(x = names(genome[rand]),split = '\t'))[1];
sectionphi[i,1] <- names(section)[i];
sectionphi[i,2] <- unlist(strsplit(x = names(genome[rand]),split = '\t'))[3];
genome <- genome[-rand];
}
write.seq(section, "section1.fasta")
source("random5ths.r")
source("random5ths.r")
source("random5ths.r")
source("random5ths.r")
source("random5ths.r")
source("random5ths.r")
source('~/cubfits/misc/S.cervisiae.REU13/random5ths.r')
source("random5ths.r")
source('~/cubfits/misc/S.cervisiae.REU13/random5ths.r')
##### Script to divide the genome into (ratio) distinct and equal parts ######
source("writing.r");
filename <- "S.cerevisiae.S288c.REU.sim.b-0.001.ces.fasta";
ratio <- 5;
genome <- read.seq(filename);
sectionlength <- length(genome)/ratio;
for(j in 1:ratio)
{
section <- list();
sectionphi <- matrix(ncol = 2, nrow = sectionlength);
colnames(sectionphi) <- c("Gene", "Xobs")
for(i in 1:(sectionlength) ) #genome loop
{
rand <- round(runif(1,1,length(genome)));
section[i] <- genome[rand];
names(section)[i] <- unlist(strsplit(x = names(genome[rand]),split = '\t'))[1];
sectionphi[i,1] <- names(section)[i];
sectionphi[i,2] <- unlist(strsplit(x = names(genome[rand]),split = '\t'))[3];
genome <- genome[-rand];
}
write.seq(section, paste("section",j,".fasta",sep=""))
write.csv(sectionphi, paste("section",j,".csv",sep=""), quote=FALSE, row.names=FALSE)
}
genome
q()
